<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baizhi.hrz.dao.CategoryDao">
	 <resultMap type="Category" id="s1">
	   		<id column="pid" property="id"/>
	   		<result column="pname" property="name"/>
	   		<result column="plevels" property="levels"/>
	   			<association property="category" javaType="Category">
	   				<id column="cid" property="id"/>
	   				<result column="cname" property="name"/>
	   				<result column="clevels" property="levels"/>
	   			</association>
	   </resultMap>
	
	
	<!-- 查询所有类别 --> 
	<select id="queryAll" resultMap="s1">
		select p.id as pid,p.name as pname,p.levels as plevels,
		c.id as cid,c.name as cname,c.levels as clevels
		from category p left join category c on p.parent_id=c.id
	</select>
	
	<!-- 添加一级类别 -->
	<insert id="add" parameterType="Category">
		insert into category values (#{id},#{name},#{parent_id,jdbcType=VARCHAR},#{levels})
	</insert>
	
	 <!-- 查询所有一级类别 -->
    <select id="selectfirst" resultType="Category">
    	select id,name,levels,parent_id parentId from category where levels=1
    </select>
    
    <!-- 删除类别根据id -->
    <delete id="delete" parameterType="String" >
    	delete from category where id=#{id} 
    </delete>
    
    <!-- 查询当前一级类别下的所有二级类别 -->
    <select id="selectSecond" resultType="Category" parameterType="String">
    	select id,name,levels,parent_id parentId from category where parent_id=#{id}
    </select>
	
	<!-- ====前台页面显示======================= -->
	
	<!-- 结果映射 -->
	<resultMap type="Category" id="aa">
		<id column="fid" property="id"/>
		<result column="fname" property="name"/>
		<result column="fparentId" property="parent_id"/>
		<result column="flevels" property="levels"/>
			<collection property="seconds" ofType="Category">
				<id column="sid" property="id"/>
				<result column="sname" property="name"/>
				<result column="sparentId" property="parent_id"/>
				<result column="slevels" property="levels"/>
			</collection>
	</resultMap>
	
	<!-- 后台: 查询一级类别下的所有二级类别 -->
	<select id="selectAllFirstIncldeSecond" resultMap="aa">
		select
			f.id as fid,f.name as fname,
			f.parent_id as fparentId,
			f.levels as flevels,
				s.id as sid,
				s.name as sname,
				s.parent_id as sparentId,
				s.levels as slevels
			from category f left join category s
			on s.parent_id=f.id
			where f.levels=1
	</select>
	
	<!-- 根据ID查询一级标题包含旗下的二级标题 -->
	<select id="" parameterType="String">
		select
			f.id as fid,f.name as fname,
			f.parent_id as fparentId,
			f.levels as flevels,
				s.id as sid,
				s.name as sname,
				s.parent_id as sparentId,
				s.levels as slevels
			from category f left join category s
			on s.parent_id=f.id
			where f.id=#{id}
	</select>
	
	<!-- 结果映射 -->
	<resultMap type="Category" id="ss">
		<id column="fid" property="id"/>
		<result column="fname" property="name"/>
		<result column="fparentId" property="parent_id"/>
		<result column="flevels" property="levels"/>
		<collection property="seconds" ofType="Category">
			<id column="sid" property="id"/>
			<result column="sname" property="name"/>
			<result column="sparentId" property="parent_id"/>
			<result column="slevels" property="levels"/>
		</collection>
	</resultMap>
	
	<!-- 前台:查询所有的类别 -->
	<select id="selectAllCategory" resultMap="ss">
		select
			f.id as fid,
			f.name as fname,
			f.parent_id as fparentId,
			f.levels as flevels,
				s.id as sid,
				s.name as sname,
				s.parent_id as sparentId,
				s.levels as slevels
		from category f inner join category s on f.id =s.parent_id
	</select>
	
	<!-- 二级页面显示 -->
	<select id="queryfirstCategory" parameterType="String" resultMap="ss">
		select
			f.id as fid,
			f.name as fname,
			f.parent_id as fparentId,
			f.levels as flevels,
			  s.id as sid,
			  s.name as sname,
			  s.parent_id as sparentId,
			  s.levels as slevels
		 from category f inner join category s on f.id=s.parent_id
		 where f.id=#{id}
	</select>
    
    
    
    
    
    
    
  
</mapper>
