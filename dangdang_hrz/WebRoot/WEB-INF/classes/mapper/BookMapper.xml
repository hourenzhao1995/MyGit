<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baizhi.hrz.dao.BookDao">
	
	<!-- 复用sql -->
	<sql id="sql1">
		id,name,author,cover,press,press_date as press_Date,edition,print_date as printDate,impression,isbn,word_num as wordNum,
		page_num as pageNum,sizes,paper,pack,price,dprice,create_date as createDate,editor_recommend as editorRecommend,
		content_abstract as contentAbstract,author_abstract as authorAbstract,director,media_commentary as mediaCommentary,
		category_id as categoryId,sale,stock
	</sql>
	
	<select id="queryBookByCateId" parameterType="String" resultType="int" >
  		select count(id) from book where category_id =#{id}
  </select>
  
  <!-- 根据类别id查询  1.在删除类别时会用到 -->
	<select id="selectBookByCategory_id" resultType="Book">
		select <include refid="sql1"/> from book where CATEGORY_ID=#{id}
	</select>
	<!-- 后台：查询所有的图书,不包含所属分类 --> 
	<select id="selectAllBook" resultType="Book">
		select <include refid="sql1"/>
		from book
	</select>
	<!-- 后台：添加图书 -->
	<insert id="addBook" parameterType="Book">
		insert into book values(#{id},#{name},#{author},#{cover},#{press},#{pressDate},#{edition},#{printDate},#{impression},#{isbn},#{wordNum},#{pageNum},#{sizes},#{paper},#{pack},#{price},#{dprice},#{createDate},#{editorRecommend},#{contentAbstract},#{authorAbstract},#{director},#{mediaCommentary},#{categoryId},#{sale},#{stock})
	</insert>
	<!-- 后台：根据图书id查询图书 -->
	<select id="selectBookById" parameterType="String" resultType="Book">
		select <include refid="sql1"/> from book where id=#{id}
	</select>
	<!-- 后台：修改图书 -->
	<update id="updateBook" parameterType="Book">
		update book set name=#{name},author=#{author},press=#{press},press_date=#{pressDate},edition=#{edition},
						print_date=#{printDate},impression=#{impression},isbn=#{isbn},word_num=#{wordNum},page_num=#{pageNum},sizes=#{sizes},
						paper=#{paper},pack=#{pack},price=#{price},dprice=#{dprice},editor_recommend=#{editorRecommend},
						content_abstract=#{contentAbstract},author_abstract=#{authorAbstract},director=#{director},media_commentary=#{mediaCommentary},
						category_id=#{categoryId},stock=#{stock}
						<if test="cover != null">,cover=#{cover}</if>
		where id=#{id}
	</update>
	<!-- 后台：删除图书 -->
	<delete id="deleteBook" parameterType="String">
		delete from book where id=#{id}
	</delete>
	<!-- 后台：根据关键字搜索图书 -->
	<select id="selectBookByKey" resultType="Book">
		select <include refid="sql1"/>
		from book 
		<where>
			<if test="key == 'name'">
				name like '%${content}%'
			</if>
			<if test="key == 'author'">
				author like '%${content}%'
			</if>
			<if test="key == 'press'">
				press like '%${content}%'
			</if>
		</where>
	</select>
	
<!-- ===========前台页面======================================= -->
	
	<!-- 前台:1、查询热销的图书 -->
	<select id="hotBook" resultType="Book">
		select b.*,rownum
		from (select <include refid="sql1"/> from book where sale!=0 order by sale desc) b
		where rownum between 1 and 8
	</select>
	
	<!-- 2、最新上架的八本书 -->
	<select id="newBook" resultType="Book">
		select b.*,rownum
		from (select <include refid="sql1"/> from book order by create_date desc) b
		where rownum between 1 and 8
	</select> 
	
	<!-- 3、新书热卖 -->
	<select id="newAndHotBook" resultType="Book">
		select b.*,rownum
		from (select <include refid="sql1"/> from book order by create_date desc,sale desc) b
		where rownum between 1 and 10
	</select>
	
	<!-- 复用sql -->
  <sql id="sql2">
		b.id,b.name,b.author,b.cover,b.press,b.press_date as pressDate,b.edition,b.print_date as printDate,b.impression,b.isbn,
		b.word_num as wordNum,b.page_num as pageNum,b.sizes,b.paper,b.pack,b.price,b.dprice,b.create_date as createDate,
		b.editor_recommend as editorRecommend,b.content_abstract as contentAbstract,b.author_abstract as authorAbstract,b.director,
		b.media_commentary as mediaCommentary,b.category_id as categoryId,b.sale,b.stock
	</sql>
	
	<!-- 分页：根据耨个类别id查询书籍集合 -->
	<select id="querySecondBook" resultType="Book">
		select *
		from (select b.*,rownum rn from (select <include refid="sql2"/>
		from book b left join category c on b.category_id=c.id
		<where>
			<choose>
				<when test="sid==null || sid==''">
					c.parent_id=#{fid}
				</when>
				<otherwise>
					b.category_id=#{sid}
				</otherwise>
			</choose>
		</where>
		) b
	)
	where rn between #{begin} and #{end}
	</select>
	
	<select id="totalCount" resultType="Integer">
		select count(b.id)
			from book b left join category c on b.category_id=c.id
			<where>
				<choose>
					<when test="sid==null || sid=''">
						c.parent_id = #{fid}
					</when>
					<otherwise>
						b.category_id = #{sid}
					</otherwise>
				</choose>
			</where>
	</select>
	
	<!-- 修改库存，数量 -->
	<update id="updateBookSaleAndStock">
		update book set sale=sale+#{count},stock=stock-#{count} where id=#{id}
	</update>
</mapper>































